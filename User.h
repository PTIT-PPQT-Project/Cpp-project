#ifndef USER_H
#define USER_H

#include <string>
#include <vector>

class User {
private:
    std::string username;
    std::string passwordHash;
    std::string email;
    bool isAdmin;
    bool isAutoGeneratedPassword;
    std::string walletId;
    double balance;

public:
    User(const std::string& username, const std::string& password, 
         const std::string& email, bool isAdmin = false);
    
    // Getters
    std::string getUsername() const { return username; }
    std::string getEmail() const { return email; }
    bool getIsAdmin() const { return isAdmin; }
    std::string getWalletId() const { return walletId; }
    double getBalance() const { return balance; }
    
    // Password management
    bool verifyPassword(const std::string& password) const;
    void changePassword(const std::string& newPassword);
    void setAutoGeneratedPassword(bool value) { isAutoGeneratedPassword = value; }
    bool isPasswordAutoGenerated() const { return isAutoGeneratedPassword; }
    
    // Wallet operations
    bool updateBalance(double amount);
    void setWalletId(const std::string& id) { walletId = id; }
    
    // Static methods
    static std::string hashPassword(const std::string& password);
    static std::string generateWalletId();
};

#endif 