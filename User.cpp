#include "User.h"
#include <random>
#include <sstream>
#include <iomanip>
#include <openssl/sha.h>

User::User(const std::string& username, const std::string& password, 
           const std::string& email, bool isAdmin)
    : username(username), email(email), isAdmin(isAdmin), 
      isAutoGeneratedPassword(false), balance(0.0) {
    passwordHash = hashPassword(password);
    walletId = generateWalletId();
}

bool User::verifyPassword(const std::string& password) const {
    return hashPassword(password) == passwordHash;
}

void User::changePassword(const std::string& newPassword) {
    passwordHash = hashPassword(newPassword);
    isAutoGeneratedPassword = false;
}

bool User::updateBalance(double amount) {
    if (balance + amount < 0) {
        return false;
    }
    balance += amount;
    return true;
}

std::string User::hashPassword(const std::string& password) {
    unsigned char hash[SHA256_DIGEST_LENGTH];
    SHA256_CTX sha256;
    SHA256_Init(&sha256);
    SHA256_Update(&sha256, password.c_str(), password.length());
    SHA256_Final(hash, &sha256);
    
    std::stringstream ss;
    for(int i = 0; i < SHA256_DIGEST_LENGTH; i++) {
        ss << std::hex << std::setw(2) << std::setfill('0') << (int)hash[i];
    }
    return ss.str();
}

std::string User::generateWalletId() {
    static std::random_device rd;
    static std::mt19937 gen(rd());
    static std::uniform_int_distribution<> dis(0, 15);
    static const char* hex = "0123456789ABCDEF";
    
    std::string uuid = "WALLET-";
    for(int i = 0; i < 8; i++) {
        uuid += hex[dis(gen)];
    }
    return uuid;
} 